#!/bin/bash

APT_PKGS="qemu-utils p7zip"
PACMAN_PKGS="qemu-img p7zip "
DNF_PKGS=""
DISTRO=(arch debian ubuntu redhat)
OS="${OS:-NULL}"
COMMAND=""
INPUT_FILE=""
OUTPUT_FILE=""
INPUT_TYPE=""
OUTPUT_TYPE=""
COMPRESS=0

get_os()
{
    for val in "${DISTRO[@]}"
    do
	local distro=$(cat /etc/*release | grep $val)
	if [ -z ${distro+x} ]; then 
	    echo "Unknown Distro" 
	else 
	    OS=$val
	fi
	break
    done
}

query_package()
{
   echo "Checking installed packages..."

   local missing=()
   local pkg_query=""
   IFS=' '

   case $OS in
       "arch")
          read -ra pkgs <<< "$PACMAN_PKGS"
	  $pkg_query="pacman -Q"
	  ;;

       "debian")
          read -ra pkgs <<< "$APT_PKGS"
	  $pkg_query="dpkg-query -l"
	  ;;

       "ubuntu")
	  read -ra pkgs <<< "$APT_PKGS"
	  $pkg_query="dpkg-query -l"
	  ;;
	  
       "redhat")
	  read -ra pkgs <<< "$DNF_PKGS"
	  ;;

       *)
	  exit 0
	  ;;
    esac

   for val in "${pkgs[@]}"
   do
      #local result=$(dpkg-query -l $val | grep -o $val)
      local result=$($pkg_query $val | grep -o $val )

      if [ ! $result ] ; then
         missing+=($val)
      fi
   done

   if [ $missing ] ; then
      install_package ${missing[@]}
   else
      echo "Required packages already installed....skipping"
   fi
}

install_package()
{
   echo "Installing packages..."

   case $OS in
       "arch")
	   sudo pacman -S $@
           ;;
       "debian")
	   sudo apt-get install $@ -y
	   ;;
      "ubuntu")
	   sudo apt-get install $@ -y
	   ;;
      "redhat")
           sudo dnf install $@
	   ;;
      *)
	   exit 0
	   ;;
   esac
}

convert()
{
   echo "Converting image..."

   sudo qemu-img $COMMAND -f $INPUT_TYPE $INPUT_FILE -O $OUTPUT_TYPE $OUTPUT_FILE

   echo "Conversion process complete"

   if [ $COMPRESS -eq 1 ] ; then
      compress $OUTPUT_FILE
   fi
}

compress()
{
   echo "Compressing image..."

   7z a $OUTPUT_FILE.7z $OUTPUT_FILE
}

parse_args()
{
   if [ $# -eq 0 ] ; then
      help
     exit 0
   fi

   while getopts "c:f:o:i:t:zh" option ;
   do
      case "${option}" in
         c)
            COMMAND=${OPTARG}
            ;;
         f)
            INPUT_FILE=${OPTARG}
            ;;
         o)
            OUTPUT_FILE=${OPTARG}
            ;;
         i)
            INPUT_TYPE=${OPTARG}
            ;;
         t)
            OUTPUT_TYPE=${OPTARG}
            ;;
         z)
            COMPRESS=1
            ;;
         h)
            help
            exit 0
            ;;
         ?)
            echo "Error: Bad option"
            exit 1
            ;;
      esac
   done
}

help()
{
   echo "Usage: img-convert -c [command] {-f -o -i -t}"
   echo " -c               command (convert)"
   echo " -f               input file"
   echo " -o               output file"
   echo " -i               input file type (qcow2, raw, vdi, vmdk)"
   echo " -t               output file type (qcow2,raw, vdi, vmdk)"
   echo " -h               print help"
}

main()
{
   get_os
   #parse_args $@
   #query_package
   #convert
}

main $@
